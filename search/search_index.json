{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Liberty Web Docs Welcome to the LibertyBans Web Interface Documentation. Installation Guide Download the latest version of Liberty Web here Create a new folder in which you will run your Liberty Web server (If you are using a shared hosting panel such as Pterodactyl simply upload the jar to your server) Copy your LibertyBans plugin folder and place it in the same directory as your Liberty Web jar (the plugin folder should be configured with the external database connection credentials) Start the Liberty Web jar java -jar Liberty_Web-VERSION.jar , when you start Liberty Web for the first time a config.yml file will be created which you can then configure. The config looks something like this: server: # On what port the server will run port: 8080 host: \"0.0.0.0\" # Cache configuration caffeine: # Some usernames aren't saved in the database, so we must retrieve them using Mojang's API # The provided configuration should be suitable for most users mojang: # Maximum amount of usernames to cache maxSize: 150 # After what time cache record will expire expiration: \"10m\" After you're done editing your config.yml start Liberty Web once again, on the second startup a new folder called frontend will be created. In this folder you can edit or completely change the style of your website to suit your needs. If you wish to create a completely new frontend you should learn some more about the backend on this guide . You are done, you can now view your punishments online. Please note that this is meant to be a public facing website to allow all your players to publicly view your server's punishments. Some features meant for administration use of the server should be added in future updates so stay tuned.","title":"Liberty Web Docs"},{"location":"#liberty-web-docs","text":"Welcome to the LibertyBans Web Interface Documentation.","title":"Liberty Web Docs"},{"location":"#installation-guide","text":"Download the latest version of Liberty Web here Create a new folder in which you will run your Liberty Web server (If you are using a shared hosting panel such as Pterodactyl simply upload the jar to your server) Copy your LibertyBans plugin folder and place it in the same directory as your Liberty Web jar (the plugin folder should be configured with the external database connection credentials) Start the Liberty Web jar java -jar Liberty_Web-VERSION.jar , when you start Liberty Web for the first time a config.yml file will be created which you can then configure. The config looks something like this: server: # On what port the server will run port: 8080 host: \"0.0.0.0\" # Cache configuration caffeine: # Some usernames aren't saved in the database, so we must retrieve them using Mojang's API # The provided configuration should be suitable for most users mojang: # Maximum amount of usernames to cache maxSize: 150 # After what time cache record will expire expiration: \"10m\" After you're done editing your config.yml start Liberty Web once again, on the second startup a new folder called frontend will be created. In this folder you can edit or completely change the style of your website to suit your needs. If you wish to create a completely new frontend you should learn some more about the backend on this guide . You are done, you can now view your punishments online. Please note that this is meant to be a public facing website to allow all your players to publicly view your server's punishments. Some features meant for administration use of the server should be added in future updates so stay tuned.","title":"Installation Guide"},{"location":"endpoints/","text":"Endpoints Here you can better understand the Rest API for Liberty Web and utilize them to create your own frontend or other software. Punishment Endpoint This endpoint returns punishments by type using a pagination system. You can access it using the punishments/{punishmentType}/{pageNumber} url. The {punishmentType} variable is what type of punishment you want to query. The types are: - ban - mute - warn - kick The {pageNumber} is just the number of the page you want to view. The endpoint responds in some JSON that looks like this: { \"morePages\":false, \"punishments\":[ { \"victimUuid\":\"960fdc33-e2d3-4b1e-9957-9519659f9784\", \"victimUsername\":\"computer\", \"operatorUuid\":\"00000000-0000-0000-0000-000000000000\", \"operatorUsername\":\"Console\", \"reason\":\"flying 5d\", \"active\":false, \"start\":1693683950, \"end\":0, \"label\":\"Permanent\" } ] } The morePages boolean signals if there are any more pages. For example if you query punishments/ban/3 and the pageNumber is true there is at least one more page available, if false you have reached the end. punishments is a JSON array of objects of punishments. Most of the object's values are self explanatory other then the end , if end is 0 that means that the punishment will never expire. If the operatorUuid is 00000000-0000-0000-0000-000000000000 that means the operator is the console. Statistics Endpoint This endpoint tells you the amount of total punishments there are. You can access it with the url stats/{type} . The type can be one of the following: - all (returns the total sum of all punishments) - ban - mute - warn - kick The endpoint responds in very short JSON {\"stats\":1} stats of course being the number of punishments queried.","title":"Endpoints"},{"location":"endpoints/#endpoints","text":"Here you can better understand the Rest API for Liberty Web and utilize them to create your own frontend or other software.","title":"Endpoints"},{"location":"endpoints/#punishment-endpoint","text":"This endpoint returns punishments by type using a pagination system. You can access it using the punishments/{punishmentType}/{pageNumber} url. The {punishmentType} variable is what type of punishment you want to query. The types are: - ban - mute - warn - kick The {pageNumber} is just the number of the page you want to view. The endpoint responds in some JSON that looks like this: { \"morePages\":false, \"punishments\":[ { \"victimUuid\":\"960fdc33-e2d3-4b1e-9957-9519659f9784\", \"victimUsername\":\"computer\", \"operatorUuid\":\"00000000-0000-0000-0000-000000000000\", \"operatorUsername\":\"Console\", \"reason\":\"flying 5d\", \"active\":false, \"start\":1693683950, \"end\":0, \"label\":\"Permanent\" } ] } The morePages boolean signals if there are any more pages. For example if you query punishments/ban/3 and the pageNumber is true there is at least one more page available, if false you have reached the end. punishments is a JSON array of objects of punishments. Most of the object's values are self explanatory other then the end , if end is 0 that means that the punishment will never expire. If the operatorUuid is 00000000-0000-0000-0000-000000000000 that means the operator is the console.","title":"Punishment Endpoint"},{"location":"endpoints/#statistics-endpoint","text":"This endpoint tells you the amount of total punishments there are. You can access it with the url stats/{type} . The type can be one of the following: - all (returns the total sum of all punishments) - ban - mute - warn - kick The endpoint responds in very short JSON {\"stats\":1} stats of course being the number of punishments queried.","title":"Statistics Endpoint"}]}